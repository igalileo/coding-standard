<?xml version="1.0" encoding="UTF-8"?>

<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="vendor/squizlabs/php_codesniffer/phpcs.xsd">
    <description>
        Galileo Coding standard. Vychází z coding standardů Escapestudios a Slevomatu.
    </description>

    <rule ref="Symfony">
        <exclude name="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterFirst" />
        <exclude name="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterSecond" />
        <exclude name ="Squiz.Strings.ConcatenationSpacing" />
        <exclude name ="Symfony.Functions.Arguments.Invalid" />
        <exclude name ="Symfony.ControlStructure.YodaConditions.Invalid" />
        <exclude name ="Symfony.Functions.ScopeOrder" />
    </rule>


    <rule ref="Symfony.ControlStructure.IdenticalComparison.Warning">
        <type>warning</type>
    </rule>

    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <type>warning</type>
    </rule>

    <rule ref="SlevomatCodingStandard.Functions.UnusedParameter.UnusedParameter">
        <type>warning</type>
    </rule>

    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="120"/>
        </properties>
    </rule>

    <rule ref="Zend.NamingConventions.ValidVariableName.NotCamelCaps">
        <type>warning</type>
        <severity>3</severity>
    </rule>

    <rule ref="Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps">
        <type>warning</type>
    </rule>


    <!-- SLEVOMAT CODING STANDARD -->
    <!-- Arrays -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma" />
<!--    <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation" />-->
<!--    <rule ref="SlevomatCodingStandard.Arrays.DisallowPartiallyKeyed" />-->
    <rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement">
        <type>warning</type>
    </rule>

    <!-- Classes -->
<!--    <rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing">-->
<!--        <properties>-->
<!--            <property name="linesCountBetweenMembers">1</property>-->
<!--        </properties>-->
<!--    </rule>-->
    <rule ref="SlevomatCodingStandard.Classes.ClassStructure">
        <properties>
            <property name="groups" type="array">
                <element value="uses"/>

                <element value="enum cases"/>

                <element value="public constants"/>
                <element value="constants"/>

                <element value="public static properties"/>
                <element value="public properties"/>
                <element value="protected static properties"/>
                <element value="protected properties"/>
                <element value="private static properties"/>
                <element value="private properties"/>

                <element value="constructor"/>
                <element value="static constructors"/>

                <element value="public static abstract methods"/>
                <element value="public static final methods"/>
                <element value="public static methods"/>
                <element value="public abstract methods"/>
                <element value="public final methods"/>
                <element value="magic methods"/>
                <element value="public methods"/>

                <element value="protected static abstract methods"/>
                <element value="protected static final methods"/>
                <element value="protected static methods"/>
                <element value="protected abstract methods"/>
                <element value="protected final methods"/>
                <element value="protected methods"/>

                <element value="private static methods"/>
                <element value="private methods"/>

                <element value="destructor"/>
            </property>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility" />

    <rule ref="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces">
        <properties>
            <property name="linesCountAfterOpeningBrace" value="0"/>
            <property name="linesCountBeforeClosingBrace" value="0"/>
        </properties>
    </rule>
<!--    <rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants" />-->
    <rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.DisallowMultiPropertyDefinition">
        <type>warning</type>
    </rule>
<!--    <rule ref="SlevomatCodingStandard.Classes.DisallowStringExpressionPropertyFetch" />-->
    <rule ref="SlevomatCodingStandard.Classes.MethodSpacing">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.ParentCallSpacing">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.PropertyDeclaration">
        <type>warning</type>
    </rule>
<!--    <rule ref="SlevomatCodingStandard.Classes.TraitUseSpacing">-->
<!--        <properties>-->
<!--            <property name="linesCountBeforeFirstUse" value="0"/>-->
<!--            <property name="linesCountBetweenUses" value="0"/>-->
<!--            <property name="linesCountAfterLastUse" value="1"/>-->
<!--        </properties>-->
<!--    </rule>-->
    <rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding">
        <type>warning</type>
    </rule>

    <!-- Commenting -->
<!--    <rule ref="SlevomatCodingStandard.Commenting.AnnotationName" />-->
    <rule ref="SlevomatCodingStandard.Commenting.DeprecatedAnnotationDeclaration">
        <type>warning</type>
    </rule>
<!--    <rule ref="SlevomatCodingStandard.Commenting.DisallowCommentAfterCode" />-->
    <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing">
        <properties>
            <property name="linesCountBeforeFirstContent" value="0"/>
            <property name="linesCountBetweenDescriptionAndAnnotations" value="1"/>
            <property name="linesCountBetweenDifferentAnnotationsTypes" value="1"/>
            <property name="linesCountAfterLastContent" value="0"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment" />
    <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration" />
<!--    <rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment" />-->
<!--    <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment" />-->

    <!-- Cognitive -->
<!--    <rule ref="SlevomatCodingStandard.Complexity.Cognitive" />-->

    <!-- ControlStructures -->
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition" />
    <rule ref="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing">
        <properties>
            <property name="linesCountBefore" value="1"/>
            <property name="linesCountBeforeFirst" value="0"/>
            <property name="linesCountAfter" value="1"/>
            <property name="linesCountAfterLast" value="0"/>
            <property name="controlStructures" type="array">
                <element value="if" />
                <element value="do" />
                <element value="while" />
                <element value="for" />
                <element value="foreach" />
                <element value="switch" />
                <element value="try" />
                <!--                <element value="case" />-->
                <element value="default" />
            </property>
        </properties>
    </rule>
<!--    <rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit" />-->
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowEmpty">
        <type>warning</type>
    </rule>
    <!-- <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison" /> -->
    <rule ref="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing">
        <properties>
            <property name="allowSingleLineYieldStacking" value="true"/>
            <property name="linesCountBefore" value="1"/>
            <property name="linesCountBeforeFirst" value="0"/>
            <property name="linesCountAfter" value="1"/>
            <property name="linesCountAfterLast" value="0"/>
            <property name="jumpStatements" type="array">
                <element value="goto" />
                <!--                <element value="break" />-->
                <element value="continue" />
                <element value="return" />
                <element value="throw" />
                <element value="yield" />
                <element value="yield_from" />
            </property>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses" />
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireShortTernaryOperator">
        <type>warning</type>
    </rule>
<!--    <rule ref="SlevomatCodingStandard.ControlStructures.RequireTernaryOperator" />-->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireYodaComparison">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessIfConditionWithReturn">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator">
        <type>warning</type>
    </rule>

    <!-- Exceptions -->
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch" />

    <!-- Files -->
    <rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName">
        <type>warning</type>
    </rule>

    <!-- Functions -->
    <rule ref="SlevomatCodingStandard.Functions.ArrowFunctionDeclaration">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.DisallowEmptyFunction">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.StaticClosure">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.UnusedParameter" />
    <rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue">
        <type>warning</type>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse" />
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine" />
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration" />
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration" />
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing">
        <properties>
            <property name="linesCountBeforeNamespace" value="1"/>
            <property name="linesCountAfterNamespace" value="1"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine">
        <type>warning</type>
    </rule>
<!--    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">-->
<!--        <properties>-->
<!--            <property name="searchAnnotations" value="true"/>-->
<!--        </properties>-->
<!--    </rule>-->
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash" />
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" type="boolean" value="true"/>
        </properties>
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>

    <!-- PHP -->
    <rule ref="SlevomatCodingStandard.PHP.ReferenceSpacing">
        <properties>
            <property name="spacesCountAfterReference" value="0"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.PHP.RequireNowdoc" />
    <rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.PHP.ShortList" />
    <rule ref="SlevomatCodingStandard.PHP.TypeCast" />
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses" />
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon" />
    <!-- NOTE: We want this in the long term, but there are still some cases to rewrite first. -->
    <!-- <rule ref="SlevomatCodingStandard.PHP.DisallowReference" /> -->
    <!-- NOTE: Works fine for PHPStan, but not for Serenata, as it doesn't support parsing assertions yet. -->
<!--     <rule ref="SlevomatCodingStandard.PHP.RequireExplicitAssertion" />-->

    <!-- TypeHints -->
<!--    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes" />-->
<!--    <rule ref="SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax" />-->
<!--    <rule ref="SlevomatCodingStandard.TypeHints.DisallowMixedTypeHint" />-->
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints" />
    <rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue" />
<!--    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint" />-->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing" />
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
        <type>warning</type>
    </rule>
<!--    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHintSpacing" />-->
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing" />
    <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint">
        <type>warning</type>
    </rule>

    <!-- Variables -->
    <rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable" />
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable" />
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable" />

    <!-- Whitespaces -->
<!--    <rule ref="SlevomatCodingStandard.Whitespaces.DuplicateSpaces" />-->
</ruleset>
